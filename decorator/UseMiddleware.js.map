{"version":3,"sources":["../../src/decorator/UseMiddleware.ts"],"names":[],"mappings":";;AAAA,kCAAoD;AAcpD;;;GAGG;AACH;IAA8B,qBAAkF;SAAlF,UAAkF,EAAlF,qBAAkF,EAAlF,IAAkF;QAAlF,gCAAkF;;IAC5G,OAAO,UAAU,MAAgB;QAC7B,WAAW,CAAC,OAAO,CAAC,UAAA,UAAU;YAC1B,kCAA0B,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;gBACnC,MAAM,EAAE,MAAM;gBACd,UAAU,EAAE,UAAU;aACzB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AATD,sCASC","file":"UseMiddleware.js","sourcesContent":["import {defaultMetadataArgsStorage} from \"../index\";\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller.\r\n * Must be set to controller class.\r\n */\r\nexport function UseMiddleware(...middlewares: Array<Function>): Function;\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller.\r\n * Must be set to controller class.\r\n */\r\nexport function UseMiddleware(...middlewares: Array<(pocket: any, next: ((err?: any) => any)) => any>): Function;\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller.\r\n * Must be set to controller class.\r\n */\r\nexport function UseMiddleware(...middlewares: Array<Function|((pocket: any, next: ((err?: any) => any)) => any)>): Function {\r\n    return function (object: Function) {\r\n        middlewares.forEach(middleware => {\r\n            defaultMetadataArgsStorage().uses.push({\r\n                target: object,\r\n                middleware: middleware,\r\n            });\r\n        });\r\n    };\r\n}\r\n"],"sourceRoot":".."}
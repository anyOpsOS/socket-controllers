{"version":3,"sources":["../../src/decorator/NspParams.ts"],"names":[],"mappings":";;AACA,6DAAwD;AACxD,oCAAoD;AAEpD;;GAEG;AACH;IACI,OAAO,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAC9D,IAAI,MAAM,GAAI,OAAe,CAAC,WAAW,CAAC,mBAAmB,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1F,MAAM,QAAQ,GAAsB;YAChC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,uBAAU,CAAC,gBAAgB;YACjC,aAAa,EAAE,MAAM;SACxB,CAAC;QACF,kCAA0B,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;AACN,CAAC;AAZD,8BAYC","file":"NspParams.js","sourcesContent":["import {ParamMetadataArgs} from \"../metadata/args/ParamMetadataArgs\";\nimport {ParamTypes} from \"../metadata/types/ParamTypes\";\nimport {defaultMetadataArgsStorage} from \"../index\";\n\n/**\n * Injects parameters of the connected socket namespace.\n */\nexport function NspParams(): Function {\n    return function (object: Object, methodName: string, index: number) {\n        let format = (Reflect as any).getMetadata(\"design:paramtypes\", object, methodName)[index];\n        const metadata: ParamMetadataArgs = {\n            target: object.constructor,\n            method: methodName,\n            index: index,\n            type: ParamTypes.NAMESPACE_PARAMS,\n            reflectedType: format\n        };\n        defaultMetadataArgsStorage().params.push(metadata);\n    };\n}"],"sourceRoot":".."}
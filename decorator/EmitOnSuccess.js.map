{"version":3,"sources":["../../src/decorator/EmitOnSuccess.ts"],"names":[],"mappings":";;AAEA,+DAA0D;AAC1D,oCAAoD;AAEpD;;;;GAIG;AACH,uBAA8B,WAAmB,EAAE,OAAyD;IACxG,OAAO,UAAU,MAAc,EAAE,UAAkB;QAC/C,MAAM,QAAQ,GAAuB;YACjC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,MAAM,EAAE,UAAU;YAClB,IAAI,EAAE,yBAAW,CAAC,eAAe;YACjC,KAAK,EAAE,WAAW;YAClB,qBAAqB,EAAE,OAAO,IAAI,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,SAAS;SAC9G,CAAC;QACF,kCAA0B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC,CAAC;AACN,CAAC;AAXD,sCAWC","file":"EmitOnSuccess.js","sourcesContent":["import {ClassTransformOptions} from \"class-transformer\";\nimport {ResultMetadataArgs} from \"../metadata/args/ResultMetadataArgs\";\nimport {ResultTypes} from \"../metadata/types/ResultTypes\";\nimport {defaultMetadataArgsStorage} from \"../index\";\n\n/**\n * If this decorator is set then after controller action will emit message with the given name after action execution.\n * It will emit message only if controller succeed without errors.\n * If result is a Promise then it will wait until promise is resolved and emit a message.\n */\nexport function EmitOnSuccess(messageName: string, options?: {classTransformOptions?: ClassTransformOptions}): Function {\n    return function (object: Object, methodName: string) {\n        const metadata: ResultMetadataArgs = {\n            target: object.constructor,\n            method: methodName,\n            type: ResultTypes.EMIT_ON_SUCCESS,\n            value: messageName,\n            classTransformOptions: options && options.classTransformOptions ? options.classTransformOptions : undefined\n        };\n        defaultMetadataArgsStorage().results.push(metadata);\n    };\n}"],"sourceRoot":".."}
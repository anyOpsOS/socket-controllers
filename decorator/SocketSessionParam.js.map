{"version":3,"sources":["../../src/decorator/SocketSessionParam.ts"],"names":[],"mappings":";;AACA,6DAAwD;AACxD,oCAAoD;AAEpD;;GAEG;AACH,4BAAmC,IAAa;IAC5C,OAAO,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAC9D,IAAI,MAAM,GAAI,OAAe,CAAC,WAAW,CAAC,mBAAmB,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1F,MAAM,QAAQ,GAAsB;YAChC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,uBAAU,CAAC,oBAAoB;YACrC,aAAa,EAAE,MAAM;YACrB,KAAK,EAAE,IAAI;SACd,CAAC;QACF,kCAA0B,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;AACN,CAAC;AAbD,gDAaC","file":"SocketSessionParam.js","sourcesContent":["import {ParamMetadataArgs} from \"../metadata/args/ParamMetadataArgs\";\nimport {ParamTypes} from \"../metadata/types/ParamTypes\";\nimport {defaultMetadataArgsStorage} from \"../index\";\n\n/**\n * Injects query parameter from the received socket request.\n */\nexport function SocketSessionParam(name?: string): Function {\n    return function (object: Object, methodName: string, index: number) {\n        let format = (Reflect as any).getMetadata(\"design:paramtypes\", object, methodName)[index];\n        const metadata: ParamMetadataArgs = {\n            target: object.constructor,\n            method: methodName,\n            index: index,\n            type: ParamTypes.SOCKET_SESSION_PARAM,\n            reflectedType: format,\n            value: name\n        };\n        defaultMetadataArgsStorage().params.push(metadata);\n    };\n}"],"sourceRoot":".."}